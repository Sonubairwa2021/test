@model InterviewProject.Controllers.MyEmp

@{
    ViewBag.Title = "Create";
}
<div id="create" style="display:none">
    @using (Ajax.BeginForm("Create", new AjaxOptions { OnSuccess = "suc", OnFailure = "fail(data)", AllowCache = true, HttpMethod = "post", OnComplete = "suc(data)" }))
    {
        @Html.AntiForgeryToken()

        <hr />
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(Model => Model.firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(Model => Model.firstname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(Model => Model.firstname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model.lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(Model => Model.lastname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => Model.DOB, new { @class = "form-control", @type = "datetime" })
                    @Html.ValidationMessageFor(Model => Model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => Model.email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(Model => Model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model.contact, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => Model.contact, new { @class = "form-control" })
                    @Html.ValidationMessageFor(Model => Model.contact, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model.country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(Model => Model.country, new SelectList(ViewBag.countries, "id", "country"), "Select Country", new { @Class = "form-control" })
                    @Html.ValidationMessageFor(Model => Model.country, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => Model.stateid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(Model => Model.stateid, new SelectList(ViewBag.states, "id", "state"), "Select State", new { htmlAttributes = new { @Class = "form-control" } })
                        @Html.ValidationMessageFor(Model => Model.stateid, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            @{
                // Html.RenderPartial("States");
            }


            <div id="states" class="states">

            </div>
            <div id="cities" class="cities">

            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary submit" />
                </div>
            </div>
        </div>
    }
</div>
<div id="empLists" class="">

</div>
<div id="edit" style="display:none">

</div>
<div id="delete" style="display:none">

</div>
<div id="details" style="display:none">

</div>

@section Scripts {

    <script type="text/javascript">
        $(document).ready(function (event) {
            function suc(data) {

                if (data != "") {
                    $("#create").css("display", "none");
                    $("#empLists").html(data).css("display", "");
                }
            }

            var enableView = 0;

            $(document).on("click", ".edit", function () {
                enableView = 1;

                var token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: "/Emps/Edit",
                    //  data: { 'country': $(this).val(), '__RequestVerificationToken': token },
                    data: { 'id': $(this).attr("id") },
                    cache: false,
                    type: "get",
                    dataType: "html",
                    success: function (data, textStatus, XMLHttpRequest) {
                        $("#edit").html(data).css("display", "");
                        $("#create").css("display", "none");
                        $("#empLists").html(data).css("display", "none");
                    }
                });
            });


            $(document).on("click", ".delete", function () {

                enableView = 1;


                if (confirm("Are you sure, you want to delete the row?"))
                    $.ajax({
                        url: "/Emps/Delete",
                        //  data: { 'country': $(this).val(), '__RequestVerificationToken': token },
                        data: { 'id': $(this).attr("id") },
                        cache: false,
                        type: "get",
                        dataType: "html",
                        success: function (data, textStatus, XMLHttpRequest) {
                            alert("Row has been deleted succesfully.");
                            $("#edit").html(data).css("display", "");
                            $("#create").css("display", "none");
                            $("#empLists").html(data).css("display", "none");
                        }
                    });
            });

            function fail(data) {
                alert(data);
            }




            $(document).on("click", ".create", function () {
                $("#edit").html(data).css("display", "none");
                $("#create").css("display", "");
                $("#empLists").html(data).css("display", "none");

            });


            if (enableView == 0)
                $.ajax({
                    url: "/Emps/Index",
                    //  data: { 'country': $(this).val(), '__RequestVerificationToken': token },
                    //data:'',
                    cache: false,
                    type: "get",
                    dataType: "html",
                    success: function (data, textStatus, XMLHttpRequest) {
                        $("#empLists").empty().html(data); // HTML DOM replace
                    }
                });

            var token = $('input[name="__RequestVerificationToken"]').val();
            $(document).on("change", "#country", function () {
                $.ajax({
                    url: "/Emps/States",
                    //  data: { 'country': $(this).val(), '__RequestVerificationToken': token },
                    data: { 'country': $(this).val() },
                    cache: false,
                    type: "get",
                    dataType: "html",
                    success: function (data, textStatus, XMLHttpRequest) {
                        $(document).find(".states").html('').html(data); // HTML DOM replace
                    }
                });
            });

            $(document).on('change', "#state", function () {
                $.ajax({
                    url: "/Emps/Cities",
                    data: { 'state': $(this).val() },
                    cache: false,
                    type: "get",
                    dataType: "html",
                    success: function (data, textStatus, XMLHttpRequest) {
                        $(document).find(".cities").html('').html(data);
                        //$("#cities").html(data); // HTML DOM replace
                    }
                });
            });
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
